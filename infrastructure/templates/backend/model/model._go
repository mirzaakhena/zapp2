package model

{{if HasTime .Fields}}
import ( 
	"time"
) {{end}}

// {{PascalCase .Name}} is
type {{PascalCase .Name}} struct { 
	BaseModel{{range .Fields}}{{if (eq .DataType "enum")}}
	{{PascalCase .Name}} string `json:"{{CamelCase .Name}}"` // {{else if (eq .DataType "entity")}}
	{{PascalCase .Name}}Obj *{{PascalCase .EntityReference}} `json:"{{CamelCase .Name}}Obj"` //
	{{PascalCase .Name}}ObjID string `json:"{{CamelCase .Name}}ObjID"` //
	{{PascalCase .Name}} string `json:"{{CamelCase .Name}}"` // {{else}}
	{{PascalCase .Name}} {{.DataType}} `json:"{{CamelCase .Name}}"` // {{end}}{{end}}
}

{{if gt (len .TableName) 0}}
// TableName is
func ({{PascalCase .Name}}) TableName() string {
	return "{{.TableName}}"
} {{end}}

// Create{{PascalCase .Name}}Request is
type Create{{PascalCase .Name}}Request struct { {{range .Fields}}{{if (eq .DataType "enum")}}
	{{PascalCase .Name}} string `json:"{{CamelCase .Name}}" {{if .Required}}validate:"required"{{end}}` // {{else if (eq .DataType "entity")}}
	{{PascalCase .Name}}ObjID string `json:"{{CamelCase .Name}}ObjID" {{if .Required}}validate:"required"{{end}}` // {{else}}
	{{PascalCase .Name}} {{.DataType}} `json:"{{CamelCase .Name}}" {{if .Required}}validate:"required"{{end}}` // {{end}}{{end}}
}

// Update{{PascalCase .Name}}Request is
type Update{{PascalCase .Name}}Request struct { {{range .Fields}}{{if (eq .DataType "enum")}}
	{{PascalCase .Name}} string `json:"{{CamelCase .Name}}" {{if .Required}}validate:"required"{{end}}` // {{else if (eq .DataType "entity")}}
	{{PascalCase .Name}}ObjID string `json:"{{CamelCase .Name}}ObjID" {{if .Required}}validate:"required"{{end}}` // {{else}}
	{{PascalCase .Name}} {{.DataType}} `json:"{{CamelCase .Name}}" {{if .Required}}validate:"required"{{end}}` // {{end}}{{end}}
}
